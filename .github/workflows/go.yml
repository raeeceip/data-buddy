name: Release

on:
  push:
    branches: ["main"]

jobs:
  build-and-release:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"  # Update to a more recent Go version

      - name: Install Wails
        shell: bash
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build with Wails
        run: |
          cd DataBuddy
          wails build
        timeout-minutes: 15  # Increase timeout to 15 minutes

      - name: Rename executable (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: mv DataBuddy/build/bin/DataBuddy DataBuddy/build/bin/DataBuddy-linux

      - name: Rename executable (Windows)
        if: matrix.os == 'windows-latest'
        run: ren DataBuddy\build\bin\DataBuddy.exe DataBuddy-windows.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: DataBuddy-${{ matrix.os }}
          path: DataBuddy/build/bin/DataBuddy-*

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./DataBuddy-ubuntu-latest/DataBuddy-linux
          asset_name: DataBuddy-linux
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./DataBuddy-windows-latest/DataBuddy-windows.exe
          asset_name: DataBuddy-windows.exe
          asset_content_type: application/octet-stream